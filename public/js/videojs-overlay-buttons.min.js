/*! @name videojs-overlay-buttons @version 1.2.9 @license MIT */
!(function (e, n) {
    "object" == typeof exports && "undefined" != typeof module
        ? (module.exports = n(require("video.js")))
        : "function" == typeof define && define.amd
        ? define(["video.js"], n)
        : ((e = e || self).videojsOverlayButtons = n(e.videojs));
})(this, function (e) {
    "use strict";
    function n() {
        return (n =
            Object.assign ||
            function (e) {
                for (var n = 1; n < arguments.length; n++) {
                    var t = arguments[n];
                    for (var o in t)
                        Object.prototype.hasOwnProperty.call(t, o) &&
                            (e[o] = t[o]);
                }
                return e;
            }).apply(this, arguments);
    }
    e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
    var t,
        o = !1,
        a = {
            seekLeft: {
                handleClick: function (e) {
                    var n = Number(e.currentTime()) - 10;
                    e.currentTime(n);
                },
                doubleTap: !0,
            },
            play: {
                handleClick: function (e) {
                    e.paused() ? e.play() : e.pause();
                },
            },
            seekRight: {
                handleClick: function (e) {
                    var n = Number(e.currentTime()) + 10;
                    e.currentTime(n);
                },
                doubleTap: !0,
            },
            lockButton: !1,
        },
        r = {
            previous: { icon: "backward", className: "previous-button" },
            seekLeft: { icon: "history", className: "seek-left" },
            play: { icon: "play", className: "play-button" },
            seekRight: {
                icon: "history",
                className: "seek-right",
                extra: "fa-flip-horizontal",
            },
            next: { icon: "forward", className: "next-button" },
        },
        c = e.registerPlugin || e.plugin,
        i = function (e, n) {
            var t = document.querySelector(".overlay-row");
            e.on("play", function () {
                document.querySelector(
                    ".play-button .button-wrapper"
                ).innerHTML = '<i class="icon fa fa-4x fa-pause"></i>';
            }),
                e.on("pause", function () {
                    document.querySelector(
                        ".play-button .button-wrapper"
                    ).innerHTML = '<i class="icon fa fa-4x fa-play"></i>';
                }),
                e.on("userinactive", function () {
                    n.classList.add("d-none"), t.classList.add("d-none");
                }),
                e.on("useractive", function () {
                    n.classList.remove("d-none"), t.classList.remove("d-none");
                }),
                n.addEventListener("click", function (e) {
                    var n = document.querySelector(".vjs-control-bar");
                    e.target.classList.contains("icon") ||
                        (t.classList.contains("d-none")
                            ? (t.classList.remove("d-none"),
                              o || n.classList.remove("d-none"))
                            : (t.classList.add("d-none"),
                              n.classList.add("d-none")));
                });
        },
        s = function (e, t) {
            t = t && Object.keys(t).length ? p(t, a) : n({}, a);
            var o = document.createElement("div"),
                c = document.createElement("div"),
                i = document.createElement("div");
            (i.className = "overlay-col-12 mx-auto control-overlay-buttons"),
                (c.className = "overlay-row"),
                (o.className = "overlay-container-fluid vjs-overlay");
            var s = Object.keys(t)
                .filter(function (e) {
                    return r.hasOwnProperty(e);
                })
                .map(function (e) {
                    var n = r[e],
                        o = f(n);
                    return { options: t[e], element: o };
                });
            if ((d(s, e), u(s, e), t.lockButton)) {
                var v = document.createElement("div");
                (v.className = "overlay-col-1 lock-overlay"),
                    i.classList.remove("overlay-col-12", "mx-auto"),
                    i.classList.add("overlay-col-11");
                var m = f({
                    icon: "lock",
                    className: "lock-button",
                    size: "2x",
                });
                l(m), v.append(m), c.append(v);
            }
            return (
                s.forEach(function (e) {
                    return i.append(e.element);
                }),
                c.append(i),
                o.append(c),
                o
            );
        },
        l = function (e) {
            var n = e.children[0],
                t = document.querySelector(".vjs-control-bar");
            n.addEventListener("click", function () {
                var e = Array.from(
                    document.querySelectorAll(
                        ".overlay-button:not(.lock-button)"
                    )
                );
                if (o)
                    return (
                        (n.innerHTML = '<i class="icon fa fa-2x fa-lock"></i>'),
                        e.forEach(function (e) {
                            e.classList.remove("d-none");
                        }),
                        t.classList.remove("d-none"),
                        void (o = !1)
                    );
                (n.innerHTML = '<i class="icon fa fa-2x fa-unlock"></i>'),
                    e.forEach(function (e) {
                        e.classList.add("d-none");
                    }),
                    t.classList.add("d-none"),
                    (o = !0);
            });
        },
        u = function (e, n) {
            (e = e.filter(function (e) {
                return e.options.doubleTap && e.options.handleClick;
            })).forEach(function (e) {
                e.element.addEventListener("click", function () {
                    v(function () {
                        e.options.handleClick(n);
                    });
                });
            });
        },
        d = function (e, n) {
            (e = e.filter(function (e) {
                return e.options.handleClick;
            })).forEach(function (e) {
                e.element.children[0].addEventListener("click", function () {
                    return e.options.handleClick(n);
                });
            });
        },
        f = function (e) {
            var n = e.icon,
                t = e.extra,
                o = void 0 === t ? "" : t,
                a = e.className,
                r = void 0 === a ? "" : a,
                c = e.size,
                i = void 0 === c ? "4x" : c,
                s = document.createElement("i");
            s.className = "icon fa fa-" + i + " fa-" + n + " " + o;
            var l = document.createElement("div");
            (l.className = "button-wrapper"), l.append(s);
            var u = document.createElement("div");
            return (
                (u.className = "overlay-button vjs-button " + r), u.append(l), u
            );
        },
        v = function (e) {
            var n = new Date().getTime() - t;
            n < 400 && n > 0 && e(), (t = new Date().getTime());
        },
        p = function (e, n) {
            for (var t in e) {
                var o = e[t],
                    a = n[t];
                if (a)
                    for (var r in a)
                        !o.hasOwnProperty(r) &&
                            a.hasOwnProperty(r) &&
                            (o[r] = a[r]);
            }
            return e;
        },
        m = function (e) {
            var n = this;
            this.ready(function () {
                !(function (e, n) {
                    e.addClass("vjs-touch-overlay");
                    var t = s(e, n);
                    e.el().append(t), i(e, t);
                })(n, e);
            });
        };
    return c("touchOverlay", m), (m.VERSION = "1.2.9"), m;
});
